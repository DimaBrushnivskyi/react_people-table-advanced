{"version":3,"sources":["api/api.ts","components/PersonName.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["getPeople","a","fetch","response","json","people","ok","Error","status","statusText","PersonName","person","useState","personSlug","setPersonSlug","slug","useLocation","pathname","split","to","className","classNames","highlight","style","color","sex","onClick","name","PersonRow","born","died","mother","fontSize","motherName","father","fatherName","arrayOfHeaders","key","label","PeopleTable","React","memo","arrayOfPeople","sortingOrder","setSortingOrder","navigate","useNavigate","location","searchParams","URLSearchParams","search","sortBy","get","sortOrder","sortedTable","useCallback","arr","sort","order","copy","b","localeCompare","sortTable","onClickHandler","e","target","currentTarget","innerText","toLowerCase","borderCollapse","map","header","type","backgroundColor","borderColor","cursor","undefined","src","alt","PeoplePage","peopleFromServer","setPeopleFromServer","appliedQuery","query","setQuery","applyQuery","debounce","newQuery","set","delete","toString","fetchPeople","result","visibleArrayOfPeople","child","find","filter","includes","useEffect","placeholder","value","onChange","HomePage","NotFoundPage","Header","children","App","title","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12e036c5.chunk.js","sourcesContent":["// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async () => {\n  const response = await fetch(BASE_URL);\n  const people = await response.json();\n\n  if (!response.ok) {\n    throw new Error(`Status: ${response.status}\n      - StatusText: ${response.statusText}`);\n  }\n\n  return people;\n};\n","import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  person: Child,\n};\n\nexport const PersonName: React.FC<Props> = ({ person }) => {\n  const [personSlug, setPersonSlug] = useState('');\n  const location = useLocation();\n  const slug = location.pathname.split('/')[2];\n\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames('Person__name', {\n        highlight: personSlug === slug,\n      })}\n      style={{\n        color: person.sex === 'm' ? 'blue' : 'red',\n      }}\n      onClick={() => setPersonSlug(person.slug)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { PersonName } from './PersonName';\n\ntype Props = {\n  person: Child,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <tr key={person.slug} className=\"Person\">\n      <td>\n        <PersonName person={person} />\n      </td>\n      <td>\n        {person.sex}\n      </td>\n      <td>\n        {person.born}\n      </td>\n      <td>\n        {person.died}\n      </td>\n      <td>\n        {!person.mother\n          ? (\n            <p style={{ color: 'black', fontSize: 'bold' }}>\n              {person.motherName}\n            </p>\n          )\n          : <PersonName person={person} />}\n      </td>\n      <td>\n        {!person.father\n          ? (\n            <p style={{ color: 'black', fontSize: 'bold' }}>\n              {person.fatherName}\n            </p>\n          )\n          : <PersonName person={person} />}\n      </td>\n    </tr>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n// import debounce from 'lodash/debounce';\nimport { PersonRow } from './PersonRow';\n\ntype Props = {\n  arrayOfPeople: Child[],\n};\n\nconst arrayOfHeaders = [\n  { key: 'Name', label: 'Name' },\n  { key: 'Sex', label: 'Sex' },\n  { key: 'Born', label: 'Born' },\n  { key: 'Died', label: 'Died' },\n  { key: 'Mother', label: 'Mother' },\n  { key: 'Father', label: 'Father' },\n];\n\nexport const PeopleTable: React.FC<Props> = React.memo(({ arrayOfPeople }) => {\n  const [sortingOrder, setSortingOrder] = useState<'asc' | 'desc'>('asc');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const sortTable = (\n    arr: Child[],\n    sort: string | null,\n    order: string | null,\n  ) => {\n    const copy = [...arr];\n\n    switch (sort) {\n      case 'name':\n      case 'sex':\n        return (order === 'asc')\n          ? copy\n            .sort((a, b) => a[sort].localeCompare(b[sort]))\n          : copy\n            .sort((a, b) => b[sort].localeCompare(a[sort]));\n      case 'born':\n        return (order === 'asc')\n          ? copy.sort((a, b) => a.born - b.born)\n          : copy.sort((a, b) => b.born - a.born);\n\n      case 'died':\n        return (order === 'asc')\n          ? copy.sort((a, b) => a.died - b.died)\n          : copy.sort((a, b) => b.died - a.died);\n\n      default:\n        return copy;\n    }\n  };\n\n  const sortedTable = useCallback(\n    () => sortTable(arrayOfPeople, sortBy, sortingOrder),\n    [arrayOfPeople, sortBy, sortingOrder],\n  );\n\n  const onClickHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const target = e.currentTarget.innerText.toLowerCase();\n\n    navigate(`people?sortBy=${target}&sortOrder=${sortingOrder}`);\n    setSortingOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  };\n\n  return (\n    <table\n      className=\"PeopleTable\"\n      style={{\n        borderCollapse: 'collapse',\n      }}\n    >\n      <thead>\n        <tr>\n          {arrayOfHeaders.map(header => (\n            <th key={header.key}>\n              <button\n                type=\"button\"\n                style={{\n                  backgroundColor: 'transparent',\n                  borderColor: 'transparent',\n                  cursor: 'pointer',\n                }}\n                onClick={\n                  (header.label !== 'Mother' && header.label !== 'Father')\n                    ? onClickHandler\n                    : undefined\n                }\n              >\n                {header.label}\n              </button>\n              {sortBy === header.label.toLowerCase()\n                ? '*' : ''}\n              {sortOrder === 'asc'\n                ? (\n                  <img\n                    src=\"/images/sort_asc.png\"\n                    alt=\"ascending arrow\"\n                  />\n                )\n                : (\n                  <img\n                    src=\"/images/sort_desc.png\"\n                    alt=\"descending arrow\"\n                  />\n                )}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {sortedTable().map(person => (\n          <PersonRow person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { getPeople } from '../api/api';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const navigate = useNavigate();\n\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      navigate(`?query=${searchParams.toString()}`);\n    }, 500),\n    [],\n  );\n\n  const handleQueryChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(e.target.value);\n    applyQuery(e);\n  };\n\n  const fetchPeople = async () => {\n    const result = await getPeople();\n\n    setPeopleFromServer(result);\n  };\n\n  const arrayOfPeople = peopleFromServer.map(child => ({\n    ...child,\n    father: peopleFromServer\n      .find(father => father.name === child.fatherName) || null,\n    mother: peopleFromServer\n      .find(mother => mother.name === child.motherName) || null,\n  }));\n\n  const visibleArrayOfPeople = arrayOfPeople.filter(person => (\n    (person.name + person.fatherName + person.motherName)\n      .toLowerCase()\n      .includes(query.toLowerCase())\n  ));\n\n  useEffect(() => {\n    fetchPeople();\n  }, [query]);\n\n  return (\n    <>\n      <h3>People Page</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Find a person\"\n        className=\"Person__input\"\n        value={query}\n        // onChange={(e) => {\n        //   navigate(`?query=${e.target.value}`);\n        // }}\n        onChange={handleQueryChange}\n      />\n      <PeopleTable arrayOfPeople={visibleArrayOfPeople} />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h3>Home page</h3>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <p>Page not found</p>\n  );\n};\n","import React from 'react';\n\nexport const Header: React.FC = ({ children }) => (\n  <header className=\"header\">{children}</header>\n);\n","import React from 'react';\nimport './App.scss';\nimport {\n  Link,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { Header } from './components/Header';\nimport { PersonName } from './components/PersonName';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">People table</h1>\n      <Header>\n        <nav>\n          <ul className=\"nav-bar\">\n            <li>\n              <Link\n                to=\"/\"\n                className=\"nav-bar__link\"\n                title=\"Visit Home Page\"\n              >\n                Home\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/people\"\n                className=\"nav-bar__link\"\n                title=\"Visit People Table\"\n              >\n                People\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </Header>\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={PersonName} />\n        </Route>\n\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" replace />}\n        />\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}